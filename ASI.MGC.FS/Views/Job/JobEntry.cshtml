@model ASI.MGC.FS.Model.SALEDETAIL

@{
    ViewBag.Title = "JobEntry";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/themes/base/jquery.ui.all.css" rel="stylesheet" />
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/bootstrapValidator.min.css" rel="stylesheet" />
<div class="container">
    <div id="main">
        <!-- start:breadcrumb -->
        <ol class="breadcrumb">
            <li><a href="#">Home</a></li>
            <li class="active">Sales Entry</li>
        </ol>
        <!-- end:breadcrumb -->
        <fieldset>
            <legend>Sales Entry</legend>
            <div class="row">
                <div class="container">
                    @using (Html.BeginForm("SaveJobEntry", "Job", null, FormMethod.Post, new { id = "formJobEntry", @class = "form-horizontal", enctype = "multipart/form-data" }))
                    {
                        <div class="row">
                            <div class="col-md-6 form-group">
                                <label id="lblJobID" class="control-label col-md-4 small ">Job ID:</label>
                                <div class="col-md-7 paddingLeftRight0">
                                    @Html.TextBoxFor(d => d.JOBID_SD, null, new { ID = "txtJobID", Class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(d => d.JOBID_SD)
                                </div>
                                <button type="button" class="searchClass btn btn-default btn-md" data-toggle="modal" data-target="#ModalSelectDetailedAccounts">
                                    <i class="fa fa-search"></i>
                                </button>

                            </div>
                            <div class="col-md-6 form-group">
                                <label id="lblMRVNo" class="control-label col-md-4 small ">MRV No:</label>
                                <div class="col-md-8 paddingLeftRight0">
                                    @Html.TextBoxFor(d => d.MRVNO_SD, null, new { ID = "txtMRVNo", Class = "form-control" })
                                    @Html.ValidationMessageFor(d => d.MRVNO_SD)
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 form-group">
                                <label id="lblCustCode" class="control-label col-md-4 small ">Cust Code:</label>
                                <div class="col-md-8 paddingLeftRight0">
                                    @Html.TextBox("CustCode", null, new { ID = "txtCustCode", Class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="col-md-6 form-group">
                                <label id="lblCustName" class="control-label col-md-4 small ">Cust Name:</label>
                                <div class="col-md-8 paddingLeftRight0">
                                    @Html.TextBox("CustName", null, new { ID = "txtCustName", Class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 form-group">
                                <label id="lblMRVProdCode" class="control-label col-md-4 small ">MRV Prod. Code:</label>
                                <div class="col-md-8 paddingLeftRight0">
                                    @Html.TextBox("MRVProdCode", null, new { ID = "txtMRVProdCode", Class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="col-md-6 form-group">
                                <label id="lblMRVProdDetail" class="control-label col-md-4 small ">MRV Prod. Detail:</label>
                                <div class="col-md-8 paddingLeftRight0">
                                    @Html.TextBox("MRVProdDetail", null, new { ID = "txtMRVProdDetail", Class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 form-group">
                                <label id="lblEmpCode" class="control-label col-md-4 small ">Emp Code:</label>
                                <div class="col-md-8 paddingLeftRight0">
                                    @Html.TextBox("EmpCode", null, new { ID = "txtEmpCode", Class = "form-control" })
                                </div>
                            </div>
                            <div class="col-md-6 form-group">
                                <label id="lblEmpName" class="control-label col-md-4 small ">Emp Name:</label>
                                <div class="col-md-8 paddingLeftRight0">
                                    @Html.TextBox("EmpName", null, new { ID = "txtDocDate", Class = "form-control" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 form-group">
                                <label id="lblSaleDate" class="control-label col-md-4 small ">Sale Date:</label>
                                <div class="col-md-8 paddingLeftRight0">
                                    @Html.TextBoxFor(d => d.SALEDATE_SD, null, new { ID = "txtSaleDate", @Value = DateTime.Today.Date.ToShortDateString(), Class = "form-control" })
                                    @Html.ValidationMessageFor(d => d.SALEDATE_SD)
                                </div>
                            </div>
                            <div class="col-md-6 form-group">
                                <label id="lblType" class="control-label col-md-4 small ">Type:</label>
                                <div class="col-md-8 paddingLeftRight0">
                                    @Html.DropDownList("SaleType", (IList<SelectListItem>)ViewBag.SaleTypeList, new { id = "ddlSaleType", Class = "form-control" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div id="divPrCode" class="col-md-6 form-group">
                                <label id="lblPrCode" class="control-label col-md-4 small ">Pr Code:</label>
                                <div class="col-md-8 paddingLeftRight0">
                                    @Html.TextBoxFor(d => d.PRCODE_SD, null, new { ID = "txtPrCode", Class = "form-control" })
                                    @Html.ValidationMessageFor(d => d.PRCODE_SD)
                                </div>
                            </div>
                            <div id="divSowCode" style="display:none;" class="col-md-6 form-group">
                                <label id="lblSowCode" class="control-label col-md-4 small ">Sow Code:</label>
                                <div class="col-md-8 paddingLeftRight0">
                                    @Html.TextBoxFor(d => d.JOBID_SD, null, new { ID = "txtJobID", Class = "form-control" })
                                    @Html.ValidationMessageFor(d => d.JOBID_SD)
                                </div>
                            </div>
                            <div id="divPrDetail" class="col-md-6 form-group">
                                <label id="lblPrDetail" class="control-label col-md-4 small ">Pr Detail:</label>
                                <div class="col-md-8 paddingLeftRight0">
                                    @Html.TextBox("PrDetail", null, new { ID = "txtPrDetail", Class = "form-control" })
                                </div>
                            </div>
                            <div id="divSowDetail" style="display:none;" class="col-md-6 form-group">
                                <label id="lblSowDetail" class="control-label col-md-4 small ">Sow Detail:</label>
                                <div class="col-md-8 paddingLeftRight0">
                                    @Html.TextBox("SowDetail", null, new { ID = "txtSowDetail", Class = "form-control" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 form-group">
                                <label id="lblQty" class="control-label col-md-4 small ">Quantity:</label>
                                <div class="col-md-8 paddingLeftRight0">
                                    @Html.TextBoxFor(d => d.QTY_SD, null, new { ID = "txtQty", Class = "form-control" })
                                    @Html.ValidationMessageFor(d => d.QTY_SD)
                                </div>
                            </div>
                            <div class="col-md-6 form-group">
                                <label id="lblUnit" class="control-label col-md-4 small ">Unit:</label>
                                <div class="col-md-8 paddingLeftRight0">
                                    @Html.TextBox("Unit", null, new { ID = "txtUnit", Class = "form-control" })
                                    @Html.ValidationMessageFor(d => d.QTY_SD)
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 form-group">
                                <label id="lblPrRate" class="control-label col-md-4 small ">Rate:</label>
                                <div class="col-md-8 paddingLeftRight0">
                                    @Html.TextBoxFor(d => d.RATE_SD, null, new { ID = "txtPrRate", Class = "form-control" })
                                    @Html.ValidationMessageFor(d => d.RATE_SD)
                                </div>
                            </div>
                            <div class="col-md-6 form-group">
                                <label id="lblPrAmount" class="control-label col-md-4 small ">Amount:</label>
                                <div class="col-md-8 paddingLeftRight0">
                                    @Html.TextBox("Amount", null, new { ID = "txtPrAmount", Class = "form-control", @readonly="readonly" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 form-group">
                                <label id="lblDiscount" class="control-label col-md-4 small ">Discount:</label>
                                <div class="col-md-8 paddingLeftRight0">
                                    @Html.TextBoxFor(d => d.DISCOUNT_SD, null, new { ID = "txtDiscount", Class = "form-control", @value="0" })
                                    @Html.ValidationMessageFor(d => d.DISCOUNT_SD)
                                </div>
                            </div>
                            <div class="col-md-6 form-group">
                                <label id="lblShipCharge" class="control-label col-md-4 small ">Shipping Charges:</label>
                                <div class="col-md-8 paddingLeftRight0">
                                    @Html.TextBoxFor(d => d.SHIPPINGCHARGES_SD, null, new { ID = "txtShipCharge", Class = "form-control" })
                                    @Html.ValidationMessageFor(d => d.SHIPPINGCHARGES_SD)
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 form-group">
                                <label id="lblPayMode" class="control-label col-md-4 small ">Pay Mode:</label>
                                <div class="col-md-8 paddingLeftRight0">
                                    @Html.DropDownList("PayMode", (IList<SelectListItem>)ViewBag.PayModeList, new { id = "ddlPayMode", Class = "form-control" })
                                </div>
                            </div>
                            <div id="divCashAmount" class="col-md-6 form-group">
                                <label id="lblCashAmount" class="control-label col-md-4 small ">Cash Amount:</label>
                                <div class="col-md-8 paddingLeftRight0">
                                    @Html.TextBoxFor(d => d.CASHTOTAL_SD, new { ID = "txtCashAmount", Class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(d => d.CASHTOTAL_SD)
                                </div>
                            </div>
                            <div id="divCreditAmount" style="display:none;" class="col-md-6 form-group">
                                <label id="lblCreditAmount" class="control-label col-md-4 small ">Credit Amount:</label>
                                <div class="col-md-8 paddingLeftRight0">
                                    @Html.TextBoxFor(d => d.CREDITTOTAL_SD, new { ID = "txtCreditAmount", Class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(d => d.CREDITTOTAL_SD)
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 form-group">
                            </div>
                            <div class="col-md-6 form-group">
                                <label></label>
                                <div class="col-md-8 paddingLeftRight0">
                                    <input type="submit" class="btn btn-success col-md-3 pull-right" value="Save">
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </fieldset>
    </div>
</div>
@section Scripts {
    <script src="@Url.Content("~/Scripts/i18n/grid.locale-en.js")"></script>
    <script src="@Url.Content("~/Scripts/bootstrap.min.js")"></script>
    <script src="@Url.Content("~/Scripts/bootstrapValidator.min.js")"></script>
    <script>
        $(document).ready(function () {
            $("#quickLinks").children("li.active").removeClass("active");
            $("#liSalesEntry").addClass("active");
            $("#txtSaleDate").datepicker();
            $('#ddlSaleType').on("change",function (e) {
                if ($('#ddlSaleType').val() == "Product")
                {
                    $("#divSowCode").hide();
                    $("#divSowDetail").hide();
                    $("#divPrCode").show();
                    $("#divPrDetail").show();
                }
                else if ($('#ddlSaleType').val() == "SOW") {
                    $("#divPrCode").hide();
                    $("#divPrDetail").hide();
                    $("#divSowCode").show();
                    $("#divSowDetail").show();
                }
            });
            $('#ddlPayMode').on("change", function (e) {
                var TotalAmount = $("#txtQty").val() * $("#txtPrRate").val();
                $("#txtPrAmount").val(TotalAmount);
                if ($('#ddlPayMode').val() == "Cash") {
                    var finalAmount = $("#txtDiscount").val() * 1 + $("#txtShipCharge").val() * 1 + TotalAmount;
                    $("#txtCreditAmount").val("0");
                    $("#divCreditAmount").hide();
                    $('#txtCashAmount').val(finalAmount);
                    $("#divCashAmount").show();
                }
                else if ($('#ddlPayMode').val() == "Credit") {
                    var finalAmount = $("#txtDiscount").val() * 1 + $("#txtShipCharge").val() * 1 + TotalAmount;
                    $("#txtCashAmount").val("0");
                    $("#divCashAmount").hide();
                    $('#txtCreditAmount').val(finalAmount);
                    $("#divCreditAmount").show();
                }
            });
            $("#txtQty").on("blur", function () {
                if ($("#txtQty").val() == "")
                {
                    $("#txtQty").val("0");
                }
                var TotalAmount = $("#txtQty").val() * $("#txtPrRate").val();
                $("#txtPrAmount").val(TotalAmount);
                if ($('#ddlPayMode').val() == "Cash") {
                    var finalAmount = $("#txtDiscount").val() + $("#txtShipCharge").val() + TotalAmount;
                    $("#txtCreditAmount").val("0");
                    $("#divCreditAmount").hide();
                    $('#txtCashAmount').val(finalAmount);
                    $("#divCashAmount").show();
                }
                else if ($('#ddlPayMode').val() == "Credit") {
                    var finalAmount = $("#txtDiscount").val() + $("#txtShipCharge").val() + TotalAmount;
                    $("#txtCashAmount").val("0");
                    $("#divCashAmount").hide();
                    $('#txtCreditAmount').val(finalAmount);
                    $("#divCreditAmount").show();
                }
            });
            $("#txtPrRate").on("blur", function () {
                if ($("#txtPrRate").val() == "") {
                    $("#txtPrRate").val(0);
                }
                var TotalAmount = $("#txtQty").val() * $("#txtPrRate").val();
                $("#txtPrAmount").val(TotalAmount);
                if ($('#ddlPayMode').val() == "Cash") {
                    var finalAmount = $("#txtDiscount").val()*1 + $("#txtShipCharge").val()*1 + TotalAmount;
                    $("#txtCreditAmount").val("0");
                    $("#divCreditAmount").hide();
                    $('#txtCashAmount').val(finalAmount);
                    $("#divCashAmount").show();
                }
                else if ($('#ddlPayMode').val() == "Credit") {
                    var finalAmount = $("#txtDiscount").val()*1 + $("#txtShipCharge").val()*1 + TotalAmount;
                    $("#txtCashAmount").val("0");
                    $("#divCashAmount").hide();
                    $('#txtCreditAmount').val(finalAmount);
                    $("#divCreditAmount").show();
                }
            });

            $("#txtDiscount").on("blur", function () {
                if ($("#txtDiscount").val() == "") {
                    $("#txtDiscount").val("0");
                }
                var TotalAmount = $("#txtQty").val() * $("#txtPrRate").val();
                $("#txtPrAmount").val(TotalAmount);
                if ($('#ddlPayMode').val() == "Cash") {
                    var finalAmount = $("#txtDiscount").val() * 1 + $("#txtShipCharge").val() * 1 + TotalAmount;
                    $("#divCreditAmount").val("0");
                    $("#divCreditAmount").hide();
                    $('#txtCashAmount').val(finalAmount);
                    $("#divCashAmount").show();
                }
                else if ($('#ddlPayMode').val() == "Credit") {
                    var finalAmount = $("#txtDiscount").val() * 1 + $("#txtShipCharge").val() * 1 + TotalAmount;
                    $("#divCashAmount").val("0");
                    $("#divCashAmount").hide();
                    $('#txtCreditAmount').val(finalAmount);
                    $("#divCreditAmount").show();
                }
            });
            $("#txtShipCharge").on("blur", function () {
                if ($("#txtShipCharge").val() == "") {
                    $("#txtShipCharge").val("0");
                }
                var TotalAmount = $("#txtQty").val() * $("#txtPrRate").val();
                $("#txtPrAmount").val(TotalAmount);
                if ($('#ddlPayMode').val() == "Cash") {
                    var finalAmount = $("#txtDiscount").val() * 1 + $("#txtShipCharge").val() * 1 + TotalAmount;
                    $("#divCreditAmount").val("0");
                    $("#divCreditAmount").hide();
                    $('#txtCashAmount').val(finalAmount);
                    $("#divCashAmount").show();
                }
                else if ($('#ddlPayMode').val() == "Credit") {
                    var finalAmount = $("#txtDiscount").val() * 1 + $("#txtShipCharge").val() * 1 + TotalAmount;
                    $("#divCashAmount").val("0");
                    $("#divCashAmount").hide();
                    $('#txtCreditAmount').val(finalAmount);
                    $("#divCreditAmount").show();
                }
            });
            $('#formJobEntry').bootstrapValidator({
                container: '#messages',
                feedbackIcons: {
                    valid: 'glyphicon glyphicon-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },
                fields: {
                    MRVNO_SD: {
                        validators: {
                            notEmpty: {
                                message: 'MRV Number is required'
                            }
                        }
                    },
                    EmpCode: {
                        validators: {
                            notEmpty: {
                                message: 'Employee Code is required'
                            }
                        }
                    },
                    EmpName: {
                        validators: {
                            notEmpty: {
                                message: 'Employee Name is required'
                            }
                        }
                    },
                    SALEDATE_SD: {
                        validators: {
                            notEmpty: {
                                message: 'Sale Date is required'
                            },
                            date: {
                                format: 'MM/DD/YYYY',
                                message: 'Enter Valid Date'
                            }
                        }
                    },
                    QTY_SD: {
                        validators: {
                            notEmpty: {
                                message: 'Quantity is required'
                            },
                            integer: {
                                message: 'Integer Only'
                            }
                        }
                    },
                    Unit: {
                        validators: {
                            notEmpty: {
                                message: 'Unit is required'
                            }
                        }
                    },
                    RATE_SD: {
                        validators: {
                            notEmpty: {
                                message: 'Rate is required'
                            },
                            integer: {
                                message: 'Integer Only'
                            }
                        }
                    },
                    DISCOUNT_SD: {
                        validators: {
                            notEmpty: {
                                message: 'Discount is required'
                            },
                            integer: {
                                message: 'Integer Only'
                            }
                        }
                    },
                    SHIPPINGCHARGES_SD: {
                        validators: {
                            notEmpty: {
                                message: 'Ship Charges is required'
                            },
                            integer: {
                                message: 'Integer Only'
                            }
                        }
                    }
                }
            });
        });
    </script>
}